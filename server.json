{
  "Students": [
    {
      "displayName": "Иван Смирнов",
      "email": "studentA@gmail.com"
    },
    {
      "displayName": "Иван Смирнов",
      "email": "studentB@gmail.com"
    }
  ],
  "Modules": {
    "0": {
      "Children": [
        {
          "Children": null,
          "Value": {
            "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
            "id": "module1",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": null,
            "steps": [
              {
                "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                "id": "step1",
                "version": null,
                "maxGrade": 0,
                "possibleInterventions": [
                  {
                    "step": {
                      "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                      "id": "step3",
                      "version": null,
                      "maxGrade": 0,
                      "possibleInterventions": null,
                      "resultType": null,
                      "exercises": [
                        {
                          "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                          "id": "exercise1",
                          "version": null,
                          "maxGrade": 5,
                          "possibleInterventions": null,
                          "resultType": "function Number() { [native code] }",
                          "problem": {
                            "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                            "id": null,
                            "version": null,
                            "content": "2 + 2 = ?"
                          },
                          "answers": [
                            {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "2"
                            },
                            {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "3"
                            },
                            {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "4"
                            },
                            {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "5"
                            }
                          ],
                          "correctAnswer": 3
                        },
                        {
                          "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                          "id": "exercise2",
                          "version": null,
                          "maxGrade": 15,
                          "possibleInterventions": null,
                          "resultType": "function String() { [native code] }",
                          "problem": {
                            "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                            "id": null,
                            "version": null,
                            "content": "3 + 3 = ?"
                          },
                          "correctAnswer": {
                            "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                            "id": null,
                            "version": null,
                            "value": "6"
                          }
                        }
                      ]
                    }
                  }
                ],
                "resultType": "function String() { [native code] }",
                "problem": {
                  "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "How much watch?"
                },
                "correctAnswer": {
                  "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "value": "Whom how"
                }
              },
              {
                "type": "class StudyStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.materials = null;\r\n    }\r\n}",
                "id": "step2",
                "version": null,
                "maxGrade": 0,
                "possibleInterventions": null,
                "resultType": null,
                "materials": {
                  "type": "class HypertextMaterial extends Material_1.Material {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "<div>Material1.Content Image!<img source=\"https://www.google.ru/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png\"></img></div>"
                }
              },
              {
                "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                "id": "step3",
                "version": null,
                "maxGrade": 0,
                "possibleInterventions": null,
                "resultType": null,
                "exercises": [
                  {
                    "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                    "id": "exercise1",
                    "version": null,
                    "maxGrade": 5,
                    "possibleInterventions": null,
                    "resultType": "function Number() { [native code] }",
                    "problem": {
                      "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "content": "2 + 2 = ?"
                    },
                    "answers": [
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "2"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "3"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "4"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "5"
                      }
                    ],
                    "correctAnswer": 3
                  },
                  {
                    "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                    "id": "exercise2",
                    "version": null,
                    "maxGrade": 15,
                    "possibleInterventions": null,
                    "resultType": "function String() { [native code] }",
                    "problem": {
                      "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "content": "3 + 3 = ?"
                    },
                    "correctAnswer": {
                      "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "value": "6"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "Children": null,
          "Value": {
            "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
            "id": "module2",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": null,
            "steps": [
              {
                "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                "id": "step21",
                "version": null,
                "maxGrade": 0,
                "possibleInterventions": null,
                "resultType": null,
                "exercises": [
                  {
                    "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                    "id": "exercise1",
                    "version": null,
                    "maxGrade": 5,
                    "possibleInterventions": null,
                    "resultType": "function Number() { [native code] }",
                    "problem": {
                      "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "content": "2 + 2 = ?"
                    },
                    "answers": [
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "2"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "3"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "4"
                      },
                      {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "5"
                      }
                    ],
                    "correctAnswer": 3
                  },
                  {
                    "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                    "id": "exercise2",
                    "version": null,
                    "maxGrade": 15,
                    "possibleInterventions": null,
                    "resultType": "function String() { [native code] }",
                    "problem": {
                      "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "content": "3 + 3 = ?"
                    },
                    "correctAnswer": {
                      "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                      "id": null,
                      "version": null,
                      "value": "6"
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "Value": null
    },
    "1": {
      "Children": null,
      "Value": {
        "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
        "id": "module1",
        "version": null,
        "maxGrade": 0,
        "possibleInterventions": null,
        "steps": [
          {
            "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
            "id": "step1",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": [
              {
                "step": {
                  "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                  "id": "step3",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "exercises": [
                    {
                      "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                      "id": "exercise1",
                      "version": null,
                      "maxGrade": 5,
                      "possibleInterventions": null,
                      "resultType": "function Number() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "2 + 2 = ?"
                      },
                      "answers": [
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "2"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "3"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "4"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "5"
                        }
                      ],
                      "correctAnswer": 3
                    },
                    {
                      "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                      "id": "exercise2",
                      "version": null,
                      "maxGrade": 15,
                      "possibleInterventions": null,
                      "resultType": "function String() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "3 + 3 = ?"
                      },
                      "correctAnswer": {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "6"
                      }
                    }
                  ]
                }
              }
            ],
            "resultType": "function String() { [native code] }",
            "problem": {
              "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
              "id": null,
              "version": null,
              "content": "How much watch?"
            },
            "correctAnswer": {
              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
              "id": null,
              "version": null,
              "value": "Whom how"
            }
          },
          {
            "type": "class StudyStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.materials = null;\r\n    }\r\n}",
            "id": "step2",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": null,
            "resultType": null,
            "materials": {
              "type": "class HypertextMaterial extends Material_1.Material {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
              "id": null,
              "version": null,
              "content": "<div>Material1.Content Image!<img source=\"https://www.google.ru/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png\"></img></div>"
            }
          },
          {
            "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
            "id": "step3",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": null,
            "resultType": null,
            "exercises": [
              {
                "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                "id": "exercise1",
                "version": null,
                "maxGrade": 5,
                "possibleInterventions": null,
                "resultType": "function Number() { [native code] }",
                "problem": {
                  "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "2 + 2 = ?"
                },
                "answers": [
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "2"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "3"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "4"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "5"
                  }
                ],
                "correctAnswer": 3
              },
              {
                "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                "id": "exercise2",
                "version": null,
                "maxGrade": 15,
                "possibleInterventions": null,
                "resultType": "function String() { [native code] }",
                "problem": {
                  "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "3 + 3 = ?"
                },
                "correctAnswer": {
                  "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "value": "6"
                }
              }
            ]
          }
        ]
      }
    },
    "2": {
      "Children": null,
      "Value": {
        "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
        "id": "module2",
        "version": null,
        "maxGrade": 0,
        "possibleInterventions": null,
        "steps": [
          {
            "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
            "id": "step21",
            "version": null,
            "maxGrade": 0,
            "possibleInterventions": null,
            "resultType": null,
            "exercises": [
              {
                "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                "id": "exercise1",
                "version": null,
                "maxGrade": 5,
                "possibleInterventions": null,
                "resultType": "function Number() { [native code] }",
                "problem": {
                  "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "2 + 2 = ?"
                },
                "answers": [
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "2"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "3"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "4"
                  },
                  {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "5"
                  }
                ],
                "correctAnswer": 3
              },
              {
                "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                "id": "exercise2",
                "version": null,
                "maxGrade": 15,
                "possibleInterventions": null,
                "resultType": "function String() { [native code] }",
                "problem": {
                  "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "content": "3 + 3 = ?"
                },
                "correctAnswer": {
                  "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                  "id": null,
                  "version": null,
                  "value": "6"
                }
              }
            ]
          }
        ]
      }
    }
  },
  "Courses": [
    {
      "type": "class Course extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.description = null;\r\n        this.modules = null;\r\n        this.title = null;\r\n    }\r\n}",
      "id": "CourseA",
      "version": null,
      "description": "It is an easy course!",
      "modules": {
        "Children": [
          {
            "Children": null,
            "Value": {
              "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
              "id": "module1",
              "version": null,
              "maxGrade": 0,
              "possibleInterventions": null,
              "steps": [
                {
                  "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                  "id": "step1",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": [
                    {
                      "step": {
                        "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                        "id": "step3",
                        "version": null,
                        "maxGrade": 0,
                        "possibleInterventions": null,
                        "resultType": null,
                        "exercises": [
                          {
                            "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                            "id": "exercise1",
                            "version": null,
                            "maxGrade": 5,
                            "possibleInterventions": null,
                            "resultType": "function Number() { [native code] }",
                            "problem": {
                              "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "content": "2 + 2 = ?"
                            },
                            "answers": [
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "2"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "3"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "4"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "5"
                              }
                            ],
                            "correctAnswer": 3
                          },
                          {
                            "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                            "id": "exercise2",
                            "version": null,
                            "maxGrade": 15,
                            "possibleInterventions": null,
                            "resultType": "function String() { [native code] }",
                            "problem": {
                              "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "content": "3 + 3 = ?"
                            },
                            "correctAnswer": {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "6"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "resultType": "function String() { [native code] }",
                  "problem": {
                    "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "content": "How much watch?"
                  },
                  "correctAnswer": {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "Whom how"
                  }
                },
                {
                  "type": "class StudyStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.materials = null;\r\n    }\r\n}",
                  "id": "step2",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "materials": {
                    "type": "class HypertextMaterial extends Material_1.Material {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "content": "<div>Material1.Content Image!<img source=\"https://www.google.ru/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png\"></img></div>"
                  }
                },
                {
                  "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                  "id": "step3",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "exercises": [
                    {
                      "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                      "id": "exercise1",
                      "version": null,
                      "maxGrade": 5,
                      "possibleInterventions": null,
                      "resultType": "function Number() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "2 + 2 = ?"
                      },
                      "answers": [
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "2"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "3"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "4"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "5"
                        }
                      ],
                      "correctAnswer": 3
                    },
                    {
                      "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                      "id": "exercise2",
                      "version": null,
                      "maxGrade": 15,
                      "possibleInterventions": null,
                      "resultType": "function String() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "3 + 3 = ?"
                      },
                      "correctAnswer": {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "6"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "Children": null,
            "Value": {
              "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
              "id": "module2",
              "version": null,
              "maxGrade": 0,
              "possibleInterventions": null,
              "steps": [
                {
                  "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                  "id": "step21",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "exercises": [
                    {
                      "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                      "id": "exercise1",
                      "version": null,
                      "maxGrade": 5,
                      "possibleInterventions": null,
                      "resultType": "function Number() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "2 + 2 = ?"
                      },
                      "answers": [
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "2"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "3"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "4"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "5"
                        }
                      ],
                      "correctAnswer": 3
                    },
                    {
                      "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                      "id": "exercise2",
                      "version": null,
                      "maxGrade": 15,
                      "possibleInterventions": null,
                      "resultType": "function String() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "3 + 3 = ?"
                      },
                      "correctAnswer": {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "6"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Value": null
      },
      "title": "CourseA"
    },
    {
      "type": "class Course extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.description = null;\r\n        this.modules = null;\r\n        this.title = null;\r\n    }\r\n}",
      "id": "CourseB",
      "version": null,
      "description": "You shall not pass",
      "modules": {
        "Children": [
          {
            "Children": null,
            "Value": {
              "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
              "id": "module1",
              "version": null,
              "maxGrade": 0,
              "possibleInterventions": null,
              "steps": [
                {
                  "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                  "id": "step1",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": [
                    {
                      "step": {
                        "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                        "id": "step3",
                        "version": null,
                        "maxGrade": 0,
                        "possibleInterventions": null,
                        "resultType": null,
                        "exercises": [
                          {
                            "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                            "id": "exercise1",
                            "version": null,
                            "maxGrade": 5,
                            "possibleInterventions": null,
                            "resultType": "function Number() { [native code] }",
                            "problem": {
                              "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "content": "2 + 2 = ?"
                            },
                            "answers": [
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "2"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "3"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "4"
                              },
                              {
                                "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                                "id": null,
                                "version": null,
                                "value": "5"
                              }
                            ],
                            "correctAnswer": 3
                          },
                          {
                            "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                            "id": "exercise2",
                            "version": null,
                            "maxGrade": 15,
                            "possibleInterventions": null,
                            "resultType": "function String() { [native code] }",
                            "problem": {
                              "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "content": "3 + 3 = ?"
                            },
                            "correctAnswer": {
                              "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                              "id": null,
                              "version": null,
                              "value": "6"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "resultType": "function String() { [native code] }",
                  "problem": {
                    "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "content": "How much watch?"
                  },
                  "correctAnswer": {
                    "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "value": "Whom how"
                  }
                },
                {
                  "type": "class StudyStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.materials = null;\r\n    }\r\n}",
                  "id": "step2",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "materials": {
                    "type": "class HypertextMaterial extends Material_1.Material {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                    "id": null,
                    "version": null,
                    "content": "<div>Material1.Content Image!<img source=\"https://www.google.ru/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png\"></img></div>"
                  }
                },
                {
                  "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                  "id": "step3",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "exercises": [
                    {
                      "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                      "id": "exercise1",
                      "version": null,
                      "maxGrade": 5,
                      "possibleInterventions": null,
                      "resultType": "function Number() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "2 + 2 = ?"
                      },
                      "answers": [
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "2"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "3"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "4"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "5"
                        }
                      ],
                      "correctAnswer": 3
                    },
                    {
                      "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                      "id": "exercise2",
                      "version": null,
                      "maxGrade": 15,
                      "possibleInterventions": null,
                      "resultType": "function String() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "3 + 3 = ?"
                      },
                      "correctAnswer": {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "6"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "Children": null,
            "Value": {
              "type": "class Module extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.maxGrade = 0;\r\n        this.possibleInterventions = null;\r\n        this.steps = null;\r\n    }\r\n}",
              "id": "module2",
              "version": null,
              "maxGrade": 0,
              "possibleInterventions": null,
              "steps": [
                {
                  "type": "class ControlStep extends Step_1.Step {\r\n    constructor() {\r\n        super();\r\n        this.exercises = null;\r\n    }\r\n    getGrade() {\r\n        return 0;\r\n    }\r\n}",
                  "id": "step21",
                  "version": null,
                  "maxGrade": 0,
                  "possibleInterventions": null,
                  "resultType": null,
                  "exercises": [
                    {
                      "type": "class TestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.answers = null;\r\n        this.correctAnswer = 0;\r\n        this.resultType = Number.toString();\r\n    }\r\n}",
                      "id": "exercise1",
                      "version": null,
                      "maxGrade": 5,
                      "possibleInterventions": null,
                      "resultType": "function Number() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "2 + 2 = ?"
                      },
                      "answers": [
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "2"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "3"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "4"
                        },
                        {
                          "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                          "id": null,
                          "version": null,
                          "value": "5"
                        }
                      ],
                      "correctAnswer": 3
                    },
                    {
                      "type": "class OpenTestStep extends AssignmentStep_1.AssignmentStep {\r\n    constructor() {\r\n        super();\r\n        this.correctAnswer = null;\r\n        this.resultType = String.toString();\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} answer    answer\r\n     * @return {boolean}\r\n     */\r\n    isAnswerValid(answer) {\r\n        return /* equals */ ((o1, o2) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            }\r\n            else {\r\n                return o1 === o2;\r\n            }\r\n        })(this.correctAnswer.value, answer);\r\n    }\r\n}",
                      "id": "exercise2",
                      "version": null,
                      "maxGrade": 15,
                      "possibleInterventions": null,
                      "resultType": "function String() { [native code] }",
                      "problem": {
                        "type": "class Assignment extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.content = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "content": "3 + 3 = ?"
                      },
                      "correctAnswer": {
                        "type": "class Key extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.value = null;\r\n    }\r\n}",
                        "id": null,
                        "version": null,
                        "value": "6"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Value": null
      },
      "title": "CourseB"
    }
  ],
  "CourseStates": {
    "studentA@gmail.com": [
      {
        "type": "class CourseState extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.course = null;\r\n        this.currentModule = null;\r\n        this.currentStep = null;\r\n        this.index = 0;\r\n        this.student = null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {CourseState} other\r\n     * @return {boolean}\r\n     */\r\n    hasChanged(other) {\r\n        return (!super.equals(other) &&\r\n            !(this.student.equals(other.student) &&\r\n                this.course.equals(other.course) &&\r\n                this.currentModule.equals(other.currentModule) &&\r\n                this.currentStep.equals(other.currentStep)));\r\n    }\r\n}",
        "id": null,
        "version": null,
        "course": {
          "type": "class CourseWrapper extends Course_1.Course {\r\n    constructor() {\r\n        super();\r\n        this.IUrl = null;\r\n    }\r\n}",
          "id": null,
          "version": null,
          "description": null,
          "modules": null,
          "title": null,
          "IUrl": "/course?courseId=0"
        },
        "currentModule": null,
        "currentStep": null,
        "index": 0,
        "student": {
          "displayName": "Иван Смирнов",
          "email": "studentA@gmail.com"
        }
      },
      {
        "type": "class CourseState extends Entity_1.Entity {\r\n    constructor() {\r\n        super();\r\n        this.course = null;\r\n        this.currentModule = null;\r\n        this.currentStep = null;\r\n        this.index = 0;\r\n        this.student = null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {CourseState} other\r\n     * @return {boolean}\r\n     */\r\n    hasChanged(other) {\r\n        return (!super.equals(other) &&\r\n            !(this.student.equals(other.student) &&\r\n                this.course.equals(other.course) &&\r\n                this.currentModule.equals(other.currentModule) &&\r\n                this.currentStep.equals(other.currentStep)));\r\n    }\r\n}",
        "id": null,
        "version": null,
        "course": {
          "type": "class CourseWrapper extends Course_1.Course {\r\n    constructor() {\r\n        super();\r\n        this.IUrl = null;\r\n    }\r\n}",
          "id": null,
          "version": null,
          "description": null,
          "modules": null,
          "title": null,
          "IUrl": "/course?courseId=1"
        },
        "currentModule": null,
        "currentStep": null,
        "index": 0,
        "student": {
          "displayName": "Иван Смирнов",
          "email": "studentB@gmail.com"
        }
      }
    ]
  }
}